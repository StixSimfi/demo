services:

  selenium:
    image: selenium/standalone-firefox
    ports:
      - 4444:4444

  mock:
    container_name: mock
    build:
      context: ../mock_server
      # dockerfile: backend.Dockerfile (.venv + requirements.txt)
      dockerfile: poetry.mock.Dockerfile
    ports:
      - "8089:8089"
    volumes:
      - ../../result/mock/logs:/app/logs
    command: main.py

  backend:
    container_name: backend
    build:
      context: ../backend
      # dockerfile: backend.Dockerfile (.venv + requirements.txt)
      dockerfile: poetry.backend.Dockerfile
    ports:
      - "8000:8000"
    #command: main.py
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      - mock

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "80:80"

  tests:
    container_name: tests
    build:
      context: ../../
      dockerfile: poetry.test.Dockerfile
    env_file:
      - .remote.env
    volumes:
      - ../../result/tests/flake_reports:/app/flake_reports
      - ../../result/tests/logs:/app/logs
      - ../../result/tests/allure_reports:/app/allure_reports
    command: sh tests/scripts/test.sh
    depends_on:
      - mock
      - backend
      - frontend
      - selenium

  performance:
    container_name: performance
    build:
      context: ../../
      dockerfile: poetry.test.Dockerfile
    env_file:
      - .remote.env
    volumes:
      - ../../result/tests/performance:/app/results
    ports:
      - "8090:8090"
    command: sh tests/scripts/performance_runner.sh
    depends_on:
      - mock
      - backend
      - frontend
